import pygame
import sys
import numpy


pygame.init()

WIDTH = 600
HEIGHT = 600

ROWS = 3
COLUMNS = 3

# tbh don't really like this colour
# idk if this is any better haha

BG_COLOUR = (0, 180, 200)
CIRCLE_COLOUR = (100, 20, 50)
LINE_COLOUR = (250, 250, 250)


screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Tic Tac Toe")
screen.fill(BG_COLOUR)

board = numpy.zeros((ROWS, COLUMNS))


def mark_used(row, col, player):
    board[row][col] = player


def move_ok(row, col):
    return board[row][col] == 0


def is_room():
    for row in range(ROWS):
        for col in range(COLUMNS):
            if board[row][col] == 0:
                return True
    return False


#def update_board(y_position, x_position):


def draw_the_lines():

    # draw horizontal lines

    pygame.draw.line(screen, LINE_COLOUR, (0, 200), (600, 200), width=15)
    pygame.draw.line(screen, LINE_COLOUR, (0, 400), (600, 400), width=15)

    # draw vertical lines

    pygame.draw.line(screen, LINE_COLOUR, (200, 0), (200, 600), width=15)
    pygame.draw.line(screen, LINE_COLOUR, (400, 0), (400, 600), width=15)


draw_the_lines()

player = 1

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            sys.exit()
        elif event.type == pygame.MOUSEBUTTONDOWN:
            position = pygame.mouse.get_pos()
            x_position = event.pos[0]
            y_position = event.pos[1]

            clicked_row = int(y_position//200)
            clicked_col = int(x_position//200)

            if move_ok(clicked_row, clicked_col):
                if player == 1:
                    mark_used(clicked_row, clicked_col, 1)
                    player = 2

                elif player == 2:
                    mark_used(clicked_row, clicked_col, 2)
                    player = 1
            
            print(board) # for viewing the console board, can be deleted later 

    pygame.display.update()
